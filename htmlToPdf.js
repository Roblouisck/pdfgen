var Handlebars = require('handlebars');
var pdf = require('html-pdf');
var fs = require('fs');

class htmlToPdf {
    constructor() {
        this.options = {
            format: "A4",
            orientation: "portrait",
            border: 0,
            base: 'file:///Users/mandaris/Desktop/Programming Projects/pdf-creator/public',
        }
        Handlebars.registerHelper("oddEven", function (index) {
            if (index % 2 !== 0) return true
        });
    }

    create_pdf_from_html(document) {
        return new Promise((resolve, reject) => {
            if (!document || !document.html || !document.data) {
                reject(new Error("Some, or all, options are missing."));
            }
            // Compiles a template
            var html = Handlebars.compile(document.html)(document.data);
            fs.writeFileSync("out.html", html)
            var pdfPromise = pdf.create(html, this.options);

            // Create PDF from html template generated by handlebars
            // Output will be PDF file
            pdfPromise.toFile(document.path, (err, res) => {
                if (!err)
                    resolve(res);
                else
                    reject(err);
            });
        });
    }

    groupGuestsToTables(guests) {
        const updatedGuests = guests.filter(guest => guest.table).map(guest => {
            return { ...guest, table_id: guest.table.id }
        })

        return updatedGuests.unique('table_id').map(guest => {
            return guests.filter(thisGuest => thisGuest.table.id === guest.table_id)
        })
    }

    // Read HTML Template
    file_to_base64(file) {
        return new Promise((resolve, reject) => {
            fs.readFile(file, (err, data) => {
                if (err) {
                    reject(err)
                } else {
                    resolve(data.toString('base64'))
                }
            });
        })
    }
}

module.exports = htmlToPdf